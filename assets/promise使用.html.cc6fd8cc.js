import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as l,e as n,b as s,d as i,f as p,r as a}from"./app.8225ebca.js";const u={},r=p(`<p><strong>Promise</strong> \u5BF9\u8C61\u7528\u4E8E\u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7684\u6700\u7EC8\u5B8C\u6210 (\u6216\u5931\u8D25)\u53CA\u5176\u7ED3\u679C\u503C\u3002\u4F7F\u5F97\u63A7\u5236\u5F02\u6B65\u64CD\u4F5C\u66F4\u52A0\u5BB9\u6613\u3002\u53EF\u4EE5\u5C06\u5F02\u6B65\u64CD\u4F5C\u4EE5\u540C\u6B65\u64CD\u4F5C\u7684\u6D41\u7A0B\u8868\u8FBE\u51FA\u6765\uFF0C\u907F\u514D\u4E86\u5C42\u5C42\u5D4C\u5957\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u4F20\u7EDF\u7684\u5F02\u6B65\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;node_modules/jquery/dist/jquery.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
  $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u95EE\u9898\uFF1A\u8BF7\u6C42\u6210\u529F\u4E4B\u540E\u7684\u903B\u8F91\u64CD\u4F5C\u9700\u8981\u5728\u56DE\u8C03\u4E2D\u53BB\u5B8C\u6210\uFF0C\u5982\u679C\u4E0B\u4E00\u4E2A\u5F02\u6B65\u4F9D\u8D56\u4E0A\u4E00\u4E2A\u5F02\u6B65\uFF0C\u9700\u8981\u5728\u4E0A\u4E00\u4E2A\u5F02\u6B65\u7684\u56DE\u8C03\u4E2D\u53BB\u5904\u7406\u4E0B\u4E00\u6B21\u7684\u5F02\u6B65\uFF0C\u8FD9\u6837\u7684\u4EE3\u7801\u4F1A\u9020\u6210\u96BE\u4EE5\u9605\u8BFB\u548C\u7EF4\u62A4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token keyword">const</span> id <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books/&#39;</span> <span class="token operator">+</span> id<span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise\u4F7F\u7528\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#promise\u4F7F\u7528\u4ECB\u7ECD" aria-hidden="true">#</a> Promise\u4F7F\u7528\u4ECB\u7ECD</h2><p>Promise\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570</p><p>Promise\u6784\u9020\u51FD\u6570\u539F\u578B\u4E0A\u7684\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u901A\u8FC7\u521B\u5EFA\u4E00\u4E2APromise\u5B9E\u4F8B\u8FDB\u884C\u8C03\u7528</p><ul><li>Promise.prototype.then()</li><li>Promise.prototype.catch()</li><li>Promise.prototype.finally()</li></ul><p>Promise\u6784\u9020\u51FD\u6570\u9759\u6001\u65B9\u6CD5\uFF0C\u76F4\u63A5\u901A\u8FC7Promise\u51FD\u6570\u8C03\u7528</p><ul><li>Promise.all()</li><li>Promise.allSettled()</li><li>Promise.race()</li><li>Promise.reject()</li><li>Promise.resolve()</li></ul><h2 id="\u5904\u7406\u5F02\u6B65\u6210\u529F" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u5F02\u6B65\u6210\u529F" aria-hidden="true">#</a> \u5904\u7406\u5F02\u6B65\u6210\u529F</h2><p>\u5229\u7528Promise\u5904\u7406\u5F02\u6B65</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5185\u90E8\u8FDB\u884C\u5F02\u6B65\u5904\u7406</span>
  $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\uFF0C\u73B0\u5728\u8FD8\u662F\u9700\u8981\u518D\u56DE\u8C03\u4E2D\u4F7F\u7528\u6570\u636E\uFF0C\u5728\u56DE\u8C03\u5916\u65E0\u6CD5\u4F7F\u7528</p><p>\u901A\u8FC7\u56DE\u8C03\u51FD\u6570\u7684\u884C\u53C2\uFF0C\u5904\u7406\u6210\u529F\u548C\u5931\u8D25\u7684\u7ED3\u679C</p><p><strong>\u5F02\u6B65\u6210\u529F\u7ED3\u679C\u5904\u7406</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9519\u8BEF\u5199\u6CD5\uFF0C\u786C\u662F\u628A\u6CD5\u62C9\u5229\u5F00\u6210\u4E86\u62D6\u62C9\u673A</span>
<span class="token keyword">const</span> promiseGetBooks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5185\u90E8\u8FDB\u884C\u5F02\u6B65\u5904\u7406</span>
  $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u6B63\u786E\u5199\u6CD5</span>
<span class="token keyword">const</span> promiseGetBooks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5185\u90E8\u8FDB\u884C\u5F02\u6B65\u5904\u7406</span>
  $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

promiseGetBooks<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5904\u7406\u5F02\u6B65\u5931\u8D25" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u5F02\u6B65\u5931\u8D25" aria-hidden="true">#</a> \u5904\u7406\u5F02\u6B65\u5931\u8D25</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promiseGetBooks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5185\u90E8\u8FDB\u884C\u5F02\u6B65\u5904\u7406</span>
  $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/book&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

promiseGetBooks<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise\u94FE\u5F0F" tabindex="-1"><a class="header-anchor" href="#promise\u94FE\u5F0F" aria-hidden="true">#</a> promise\u94FE\u5F0F</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promiseGetBooks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5185\u90E8\u8FDB\u884C\u5F02\u6B65\u5904\u7406</span>
  $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

promiseGetBooks<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5185\u90E8\u8FDB\u884C\u5F02\u6B65\u5904\u7406</span>
    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books/1&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5185\u90E8\u8FDB\u884C\u5F02\u6B65\u5904\u7406</span>
    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://liufusong.top:4000/books/2&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5C01\u88C5promise" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5promise" aria-hidden="true">#</a> \u5C01\u88C5promise</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">axios</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u5185\u90E8\u8FDB\u884C\u5F02\u6B65\u5904\u7406</span>
    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> options<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> options<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#promise\u793A\u4F8B" aria-hidden="true">#</a> Promise\u793A\u4F8B</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> isPregnant <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isPregnant<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token boolean">false</span>
	  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise\u6210\u529F2&#39;</span><span class="token punctuation">)</span>
	    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
	      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;promise\u5931\u8D252&#39;</span><span class="token punctuation">)</span>
	    <span class="token punctuation">}</span>
	  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">w</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>
	  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">w</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>
	  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5FC5\u987B\u6267\u884C&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5229\u7528promise\u5904\u7406\u5F02\u6B65\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\u7684\u95EE\u9898</p><p>\u6700\u7EC8\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\u7684\u65B9\u6CD5\u662Fasync await</p><p>\u6709\u4E86Promise\u5BF9\u8C61\uFF0C\u5C31\u53EF\u4EE5\u5C06\u5F02\u6B65\u64CD\u4F5C\u4EE5\u540C\u6B65\u64CD\u4F5C\u7684\u6D41\u7A0B\u8868\u8FBE\u51FA\u6765\uFF0C\u907F\u514D\u4E86\u5C42\u5C42\u5D4C\u5957\u7684\u56DE\u8C03\u51FD\u6570</p><ul><li><strong>Promise\u5BF9\u8C61\u6709\u4EE5\u4E0B2\u4E2A\u7279\u70B9</strong></li></ul><p>1.\u5BF9\u8C61\u7684\u72B6\u6001\u4E0D\u53D7\u5916\u754C\u5F71\u54CD\u3002Promise\u5BF9\u8C61\u4EE3\u8868\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\uFF0C\u6709\u4E09\u79CD\u72B6\u6001\uFF1A**Pending(\u8FDB\u884C\u4E2D)\u3001Resolved(\u5DF2\u5B8C\u6210)\u548CRejected(\u5DF2\u5931\u8D25)\u3002**\u53EA\u6709\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\uFF0C\u53EF\u4EE5\u51B3\u5B9A\u5F53\u524D\u662F\u54EA\u4E00\u79CD\u72B6\u6001\uFF0C\u4EFB\u4F55\u5176\u4ED6\u64CD\u4F5C\u90FD\u65E0\u6CD5\u6539\u53D8\u8FD9\u4E2A\u72B6\u6001</p><p>2.\u4E00\u65E6\u72B6\u6001\u6539\u53D8\uFF0C\u5C31\u4E0D\u4F1A\u518D\u53D8\uFF0C\u4EFB\u4F55\u65F6\u5019\u90FD\u53EF\u4EE5\u5F97\u5230\u8FD9\u4E2A\u7ED3\u679C\u3002Promise\u5BF9\u8C61\u7684\u72B6\u6001\u6539\u53D8\uFF0C\u53EA\u6709\u4E24\u79CD\u53EF\u80FD\uFF1A\u4ECEPending\u53D8\u4E3AResolved\uFF1B\u4ECEPending\u53D8\u4E3ARejected\u3002\u53EA\u8981\u8FD9\u4E24\u79CD\u60C5\u51B5\u53D1\u751F\uFF0C\u72B6\u6001\u5C31\u51DD\u56FA\u4E86\uFF0C\u4E0D\u4F1A\u518D\u53D8\u4E86\uFF0C\u4F1A\u4E00\u76F4\u4FDD\u6301\u8FD9\u4E2A\u7ED3\u679C\u3002\u5C31\u7B97\u6539\u53D8\u5DF2\u7ECF\u53D1\u751F\u4E86\uFF0C\u4F60\u518D\u5BF9Promise\u5BF9\u8C61\u8FDB\u884C\u56DE\u8C03\u51FD\u6570\uFF0C\u4E5F\u4F1A\u7ACB\u5373\u5F97\u5230\u8FD9\u4E2A\u7ED3\u679C\u3002</p><ul><li><strong>promise\u5BF9\u8C61\u7684\u72B6\u6001\u53EA\u6709\u4E24\u79CD\u53EF\u80FD</strong></li></ul><p>pendding-&gt;rejected\uFF0Cpendding-&gt;resolved</p><p><strong>\u57FA\u7840\u7528\u6CD5:</strong></p><p>new Promise((resolved,rejected)=&gt;{})</p><p><strong>Promise\u5BF9\u8C61</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  Promise\u5BF9\u8C61resolved,rejected\u51FD\u6570\uFF0C\u5728\u5F02\u6B65\u4E8B\u4EF6\u72B6\u6001pendding-&gt;resolved\u56DE\u8C03\u6210\u529F\u65F6\uFF0C\u4F1A\u8C03\u7528resolved\u51FD\u6570\uFF1B\u5F53\u5F02\u6B65\u64CD\u4F5C\u5931\u8D25\u65F6\uFF0C\u56DE\u8C03\u7528rejected\u51FD\u6570\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="then" tabindex="-1"><a class="header-anchor" href="#then" aria-hidden="true">#</a> then()</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  Promise\u7684then(resolved,rejected)\u51FD\u6570\u53C2\u6570\u6709\u4E24\u4E2A\uFF0C\u4E00\u4E2Aresolved\u51FD\u6570\uFF0C\u4E00\u4E2Arejected\u51FD\u6570\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="catch" tabindex="-1"><a class="header-anchor" href="#catch" aria-hidden="true">#</a> catch()</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  Promise\u7684catch()\uFF1A\u6355\u6349promise\u9519\u8BEF\u51FD\u6570\uFF0C\u548Cthen\u51FD\u6570\u53C2\u6570\u4E2Drejected\u4F5C\u7528\u4E00\u6837\uFF0C\u5904\u7406\u9519\u8BEF\uFF0C\u7531\u4E8EPromise\u629B\u51FA\u9519\u8BEF\u5177\u6709\u5192\u6CE1\u6027\u8D28\uFF0C\u80FD\u591F\u4E0D\u65AD\u4F20\u9012\uFF0C\u4F1A\u4F20\u5230catch\u4E2D\uFF0C\u6240\u4EE5\u5EFA\u8BAE\u6240\u6709\u9519\u8BEF\u5904\u7406\u653E\u5728catch\u4E2D\uFF0Cthen\u4E2D\u53EA\u5904\u7406\u6210\u529F\u7684\u3002

  Promise\u4E00\u4E2A\u5927\u7279\u8272\u5C31\u662F\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528\uFF0C\u5728then\uFF0Ccatch\u4E2D\u53EF\u4EE5\u8FD4\u56DEPromise\u5BF9\u8C61\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="all" tabindex="-1"><a class="header-anchor" href="#all" aria-hidden="true">#</a> all()</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  Promise.all([promise1,promise2])\uFF1A\u53C2\u6570\u662Fpromise\u5BF9\u8C61\u6570\u7EC4\uFF0C\u7B49\u5230\u6240\u6709promise\u5BF9\u8C61\u72B6\u6001resolved\uFF0C\u8BE5\u5BF9\u8C61\u7684\u72B6\u6001\u4F1Aresolved\uFF0C\u4F1A\u7ACB\u5373\u8C03\u7528then,\u5F53\u6709\u4E00\u4E2Apromise\u5BF9\u8C61\u4E3Arejected\uFF0C\u8BE5\u5BF9\u8C61\u7684\u72B6\u6001\u5C31\u4F1A\u53D8\u6210rejectd\uFF0C\u6267\u884Ccatch\u3002

  Promise.all()\u83B7\u5F97\u7684\u6210\u529F\u7ED3\u679C\u7684\u6570\u7EC4\u91CC\u9762\u7684\u6570\u636E\u987A\u5E8F\u548CPromise.all\u63A5\u6536\u5230\u7684\u6570\u7EC4\u987A\u5E8F\u662F\u4E00\u81F4\u7684\uFF0C\u5373p1\u7684\u7ED3\u679C\u5728\u524D\uFF0C\u5373\u4FBFp1\u7684\u7ED3\u679C\u83B7\u53D6\u7684\u6BD4p2\u8981\u665A\u3002\u8FD9\u5E26\u6765\u4E86\u4E00\u4E2A\u7EDD\u5927\u7684\u597D\u5904\uFF1A\u5728\u524D\u7AEF\u5F00\u53D1\u8BF7\u6C42\u6570\u636E\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5076\u5C14\u4F1A\u9047\u5230\u53D1\u9001\u591A\u4E2A\u8BF7\u6C42\u5E76\u6839\u636E\u8BF7\u6C42\u987A\u5E8F\u83B7\u53D6\u548C\u4F7F\u7528\u6570\u636E\u7684\u573A\u666F\uFF0C\u4F7F\u7528Promise.all\u6BEB\u65E0\u7591\u95EE\u53EF\u4EE5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="race" tabindex="-1"><a class="header-anchor" href="#race" aria-hidden="true">#</a> race()</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  Promise.race([promise1,promise2])\uFF1A\u7ADE\u901F\u51FD\u6570\uFF0C\u5F53\u6709\u4E00\u4E2Apromise\u5BF9\u8C61\u72B6\u6001\u53D8\u5316\u4E86\uFF0C\u8BE5\u5BF9\u8C61\u5C31\u4F1A\u91C7\u7528\u548C\u76F8\u540C\u7684\u72B6\u6001\uFF0C\u5E76\u6267\u884C\u76F8\u5E94\u51FD\u6570\u3002

  promise\u7684\u751F\u547D\u5468\u671F

  \u6BCF\u4E2A Promise\u90FD\u4F1A\u7ECF\u5386\u4E00\u4E2A\u77ED\u6682\u7684\u751F\u547D\u5468\u671F\uFF0C\u521D\u59CB\u4E3A\u6302\u8D77\u6001\uFF08 pending state\uFF09\uFF0C\u8FD9\u8868\u793A\u5F02\u6B65\u64CD\u4F5C\u5C1A\u672A\u7ED3\u675F\u3002\u4E00\u4E2A\u6302\u8D77\u7684 Promise \u4E5F\u88AB\u8BA4\u4E3A\u662F\u672A\u51B3\u7684\uFF08 unsettled \uFF09\u3002\u4E00\u65E6\u5F02\u6B65\u64CD\u4F5C\u7ED3\u675F\uFF0C Promise\u5C31\u4F1A\u88AB\u8BA4\u4E3A\u662F\u5DF2\u51B3\u7684\uFF08 settled \uFF09\uFF0C\u5E76\u8FDB\u5165\u4E24\u79CD\u53EF\u80FD\u72B6\u6001\u4E4B\u4E00\uFF1A

  1. \u5DF2\u5B8C\u6210\uFF08fulfilled \uFF09\uFF1A Promise \u7684\u5F02\u6B65\u64CD\u4F5C\u5DF2\u6210\u529F\u7ED3\u675F\uFF1B

  2. \u5DF2\u62D2\u7EDD\uFF08rejected \uFF09\uFF1A Promise \u7684\u5F02\u6B65\u64CD\u4F5C\u672A\u6210\u529F\u7ED3\u675F\uFF0C\u53EF\u80FD\u662F\u4E00\u4E2A\u9519\u8BEF\uFF0C\u6216\u7531\u5176\u4ED6\u539F\u56E0\u5BFC\u81F4\u3002

\u4E00\u65E6\u72B6\u6001\u6539\u53D8\uFF0C\u5C31\u300C\u51DD\u56FA\u300D\u4E86\uFF0C\u4F1A\u4E00\u76F4\u4FDD\u6301\u8FD9\u4E2A\u72B6\u6001\uFF0C\u4E0D\u4F1A\u518D\u53D1\u751F\u53D8\u5316\u3002\u5F53\u72B6\u6001\u53D1\u751F\u53D8\u5316\uFF0Cpromise.then\u7ED1\u5B9A\u7684\u51FD\u6570\u5C31\u4F1A\u88AB\u8C03\u7528\u3002\u6CE8\u610F\uFF1APromise\u4E00\u65E6\u65B0\u5EFA\u5C31\u4F1A\u300C\u7ACB\u5373\u6267\u884C\u300D\uFF0C\u65E0\u6CD5\u53D6\u6D88\u3002\u8FD9\u4E5F\u662F\u5B83\u7684\u7F3A\u70B9\u4E4B\u4E00\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u72B6\u6001\u7801\u5224\u65AD\u662F\u5426\u6210\u529F</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code>   <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6210\u529F\u64CD\u4F5C</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5931\u8D25\u64CD\u4F5C</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u624B\u5199promise" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199promise" aria-hidden="true">#</a> \u624B\u5199promise</h2>`,49),k={href:"https://juejin.cn/post/6945319439772434469#heading-3",target:"_blank",rel:"noopener noreferrer"},d=p(`<details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">//my-promise.js</span>
  <span class="token comment">// \u5148\u5B9A\u4E49\u4E09\u4E2A\u5E38\u91CF\u8868\u793A\u72B6\u6001</span>
  <span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">;</span>

  <span class="token comment">// \u65B0\u5EFA MyPromise \u7C7B</span>
  <span class="token keyword">class</span> <span class="token class-name">MyPromise</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// executor \u662F\u4E00\u4E2A\u6267\u884C\u5668\uFF0C\u8FDB\u5165\u4F1A\u7ACB\u5373\u6267\u884C</span>
      <span class="token comment">// \u5E76\u4F20\u5165resolve\u548Creject\u65B9\u6CD5</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">executor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u50A8\u5B58\u72B6\u6001\u7684\u53D8\u91CF\uFF0C\u521D\u59CB\u503C\u662F pending</span>
    status <span class="token operator">=</span> <span class="token constant">PENDING</span><span class="token punctuation">;</span>

    <span class="token comment">// resolve\u548Creject\u4E3A\u4EC0\u4E48\u8981\u7528\u7BAD\u5934\u51FD\u6570\uFF1F</span>
    <span class="token comment">// \u5982\u679C\u76F4\u63A5\u8C03\u7528\u7684\u8BDD\uFF0C\u666E\u901A\u51FD\u6570this\u6307\u5411\u7684\u662Fwindow\u6216\u8005undefined</span>
    <span class="token comment">// \u7528\u7BAD\u5934\u51FD\u6570\u5C31\u53EF\u4EE5\u8BA9this\u6307\u5411\u5F53\u524D\u5B9E\u4F8B\u5BF9\u8C61</span>
    <span class="token comment">// \u6210\u529F\u4E4B\u540E\u7684\u503C</span>
    value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5931\u8D25\u4E4B\u540E\u7684\u539F\u56E0</span>
    reason <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5B58\u50A8\u6210\u529F\u56DE\u8C03\u51FD\u6570</span>
    onFulfilledCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5B58\u50A8\u5931\u8D25\u56DE\u8C03\u51FD\u6570</span>
    onRejectedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u66F4\u6539\u6210\u529F\u540E\u7684\u72B6\u6001</span>
    <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53EA\u6709\u72B6\u6001\u662F\u7B49\u5F85\uFF0C\u624D\u6267\u884C\u72B6\u6001\u4FEE\u6539</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u72B6\u6001\u4FEE\u6539\u4E3A\u6210\u529F</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">FULFILLED</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4FDD\u5B58\u6210\u529F\u4E4B\u540E\u7684\u503C</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token comment">// resolve\u91CC\u9762\u5C06\u6240\u6709\u6210\u529F\u7684\u56DE\u8C03\u62FF\u51FA\u6765\u6267\u884C</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onFulfilledCallbacks<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// Array.shift() \u53D6\u51FA\u6570\u7EC4\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u7136\u540E\uFF08\uFF09\u8C03\u7528\uFF0Cshift\u4E0D\u662F\u7EAF\u51FD\u6570\uFF0C\u53D6\u51FA\u540E\uFF0C\u6570\u7EC4\u5C06\u5931\u53BB\u8BE5\u5143\u7D20\uFF0C\u76F4\u5230\u6570\u7EC4\u4E3A\u7A7A</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>onFulfilledCallbacks<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u66F4\u6539\u5931\u8D25\u540E\u7684\u72B6\u6001</span>
    <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53EA\u6709\u72B6\u6001\u662F\u7B49\u5F85\uFF0C\u624D\u6267\u884C\u72B6\u6001\u4FEE\u6539</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u72B6\u6001\u6210\u529F\u4E3A\u5931\u8D25</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">REJECTED</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4FDD\u5B58\u5931\u8D25\u540E\u7684\u539F\u56E0</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>
        <span class="token comment">// resolve\u91CC\u9762\u5C06\u6240\u6709\u5931\u8D25\u7684\u56DE\u8C03\u62FF\u51FA\u6765\u6267\u884C</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> realOnFulfilled <span class="token operator">=</span> <span class="token keyword">typeof</span> onFulfilled <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onFulfilled</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">;</span>
      <span class="token keyword">const</span> realOnRejected <span class="token operator">=</span> <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onRejected</span> <span class="token operator">:</span> <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> reason<span class="token punctuation">}</span><span class="token punctuation">;</span>

      <span class="token comment">// \u4E3A\u4E86\u94FE\u5F0F\u8C03\u7528\u8FD9\u91CC\u76F4\u63A5\u521B\u5EFA\u4E00\u4E2A MyPromise\uFF0C\u5E76\u5728\u540E\u9762 return \u51FA\u53BB</span>
      <span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

        <span class="token keyword">const</span> <span class="token function-variable function">fulfilledMicrotask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span>
          <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u5FAE\u4EFB\u52A1\u7B49\u5F85 promise2 \u5B8C\u6210\u521D\u59CB\u5316</span>
          <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u83B7\u53D6\u6210\u529F\u56DE\u8C03\u51FD\u6570\u7684\u6267\u884C\u7ED3\u679C</span>
              <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">realOnFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">// \u4F20\u5165 resolvePromise \u96C6\u4E2D\u5904\u7406</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> 
          <span class="token punctuation">}</span><span class="token punctuation">)</span>  
        <span class="token punctuation">}</span>

        <span class="token keyword">const</span> <span class="token function-variable function">rejectedMicrotask</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
          <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u5FAE\u4EFB\u52A1\u7B49\u5F85 promise2 \u5B8C\u6210\u521D\u59CB\u5316</span>
          <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u8C03\u7528\u5931\u8D25\u56DE\u8C03\uFF0C\u5E76\u4E14\u628A\u539F\u56E0\u8FD4\u56DE</span>
              <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">realOnRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">// \u4F20\u5165 resolvePromise \u96C6\u4E2D\u5904\u7406</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> 
          <span class="token punctuation">}</span><span class="token punctuation">)</span> 
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5224\u65AD\u72B6\u6001</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">fulfilledMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
          <span class="token function">rejectedMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u7B49\u5F85</span>
          <span class="token comment">// \u56E0\u4E3A\u4E0D\u77E5\u9053\u540E\u9762\u72B6\u6001\u7684\u53D8\u5316\u60C5\u51B5\uFF0C\u6240\u4EE5\u5C06\u6210\u529F\u56DE\u8C03\u548C\u5931\u8D25\u56DE\u8C03\u5B58\u50A8\u8D77\u6765</span>
          <span class="token comment">// \u7B49\u5230\u6267\u884C\u6210\u529F\u5931\u8D25\u51FD\u6570\u7684\u65F6\u5019\u518D\u4F20\u9012</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>onFulfilledCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fulfilledMicrotask<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rejectedMicrotask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span> 
      
      <span class="token keyword">return</span> promise2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">catch</span> <span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53EA\u9700\u8981\u8FDB\u884C\u9519\u8BEF\u5904\u7406</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">finally</span> <span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> MyPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> MyPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> error
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// resolve \u9759\u6001\u65B9\u6CD5</span>
    <span class="token keyword">static</span> <span class="token function">resolve</span> <span class="token punctuation">(</span><span class="token parameter">parameter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u4F20\u5165 MyPromise \u5C31\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>parameter <span class="token keyword">instanceof</span> <span class="token class-name">MyPromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> parameter<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u8F6C\u6210\u5E38\u89C4\u65B9\u5F0F</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// reject \u9759\u6001\u65B9\u6CD5</span>
    <span class="token keyword">static</span> <span class="token function">reject</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token function">all</span> <span class="token punctuation">(</span><span class="token parameter">promiseList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> length <span class="token operator">=</span> promiseList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        promiseList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          MyPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
            result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token function-variable function">allSettled</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">promiseList</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> length <span class="token operator">=</span> promiseList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> currentPromise <span class="token operator">=</span> MyPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promiseList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              currentPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
                result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
                  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">,</span>
                  <span class="token literal-property property">value</span><span class="token operator">:</span> value
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
                result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
                  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">,</span>
                  <span class="token literal-property property">reason</span><span class="token operator">:</span> reason
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token function">race</span> <span class="token punctuation">(</span><span class="token parameter">promiseList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> length <span class="token operator">=</span> promiseList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            MyPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promiseList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C promise \u548C x \u6307\u5411\u540C\u4E00\u5BF9\u8C61\uFF0C\u4EE5 TypeError \u4E3A\u636E\u56E0\u62D2\u7EDD\u6267\u884C promise</span>
    <span class="token comment">// \u8FD9\u662F\u4E3A\u4E86\u9632\u6B62\u6B7B\u5FAA\u73AF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>promise <span class="token operator">===</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;The promise and the return value are the same&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u4E2A\u5751\u662F\u8DD1\u6D4B\u8BD5\u7684\u65F6\u5019\u53D1\u73B0\u7684\uFF0C\u5982\u679Cx\u662Fnull\uFF0C\u5E94\u8BE5\u76F4\u63A5resolve</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">let</span> then<span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u628A x.then \u8D4B\u503C\u7ED9 then </span>
        then <span class="token operator">=</span> x<span class="token punctuation">.</span>then<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u53D6 x.then \u7684\u503C\u65F6\u629B\u51FA\u9519\u8BEF e \uFF0C\u5219\u4EE5 e \u4E3A\u636E\u56E0\u62D2\u7EDD promise</span>
        <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u5982\u679C then \u662F\u51FD\u6570</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> called <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5C06 x \u4F5C\u4E3A\u51FD\u6570\u7684\u4F5C\u7528\u57DF this \u8C03\u7528\u4E4B</span>
        <span class="token comment">// \u4F20\u9012\u4E24\u4E2A\u56DE\u8C03\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u53EB\u505A resolvePromise \uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u53EB\u505A rejectPromise</span>
        <span class="token comment">// \u540D\u5B57\u91CD\u540D\u4E86\uFF0C\u6211\u76F4\u63A5\u7528\u533F\u540D\u51FD\u6570\u4E86</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
            x<span class="token punctuation">,</span>
            <span class="token comment">// \u5982\u679C resolvePromise \u4EE5\u503C y \u4E3A\u53C2\u6570\u88AB\u8C03\u7528\uFF0C\u5219\u8FD0\u884C [[Resolve]](promise, y)</span>
            <span class="token parameter">y</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u5982\u679C resolvePromise \u548C rejectPromise \u5747\u88AB\u8C03\u7528\uFF0C</span>
              <span class="token comment">// \u6216\u8005\u88AB\u540C\u4E00\u53C2\u6570\u8C03\u7528\u4E86\u591A\u6B21\uFF0C\u5219\u4F18\u5148\u91C7\u7528\u9996\u6B21\u8C03\u7528\u5E76\u5FFD\u7565\u5269\u4E0B\u7684\u8C03\u7528</span>
              <span class="token comment">// \u5B9E\u73B0\u8FD9\u6761\u9700\u8981\u524D\u9762\u52A0\u4E00\u4E2A\u53D8\u91CFcalled</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
              called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> y<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token comment">// \u5982\u679C rejectPromise \u4EE5\u636E\u56E0 r \u4E3A\u53C2\u6570\u88AB\u8C03\u7528\uFF0C\u5219\u4EE5\u636E\u56E0 r \u62D2\u7EDD promise</span>
            <span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
              called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5982\u679C\u8C03\u7528 then \u65B9\u6CD5\u629B\u51FA\u4E86\u5F02\u5E38 e\uFF1A</span>
          <span class="token comment">// \u5982\u679C resolvePromise \u6216 rejectPromise \u5DF2\u7ECF\u88AB\u8C03\u7528\uFF0C\u5219\u5FFD\u7565\u4E4B</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

          <span class="token comment">// \u5426\u5219\u4EE5 e \u4E3A\u636E\u56E0\u62D2\u7EDD promise</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C then \u4E0D\u662F\u51FD\u6570\uFF0C\u4EE5 x \u4E3A\u53C2\u6570\u6267\u884C promise</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C x \u4E0D\u4E3A\u5BF9\u8C61\u6216\u8005\u51FD\u6570\uFF0C\u4EE5 x \u4E3A\u53C2\u6570\u6267\u884C promise</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  MyPromise<span class="token punctuation">.</span><span class="token function-variable function">deferred</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span>resolve <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
      result<span class="token punctuation">.</span>reject <span class="token operator">=</span> reject<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>


  module<span class="token punctuation">.</span>exports <span class="token operator">=</span> MyPromise
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//test.js</span>
<span class="token comment">//\u5DF2\u901A\u8FC7promises-aplus-tests\u6D4B\u8BD5</span>
  <span class="token keyword">const</span> MyPromise <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./my-promise&#39;</span><span class="token punctuation">)</span>

  MyPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  MyPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,1);function v(m,b){const t=a("Boxx"),e=a("ExternalLinkIcon");return c(),l("div",null,[n(t),r,s("p",null,[s("a",k,[i("\u7B14\u8BB0\u76F8\u5173\u6587\u6863"),n(e)])]),d])}const g=o(u,[["render",v],["__file","promise\u4F7F\u7528.html.vue"]]);export{g as default};
