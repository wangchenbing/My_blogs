import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.8225ebca.js";const p={},e=t(`<h2 id="\u7C7B\u578B\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u6CE8\u89E3" aria-hidden="true">#</a> \u7C7B\u578B\u6CE8\u89E3</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token literal-property property">a</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">&#39;foobar&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">b</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">c</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E25\u683C\u6A21\u5F0F\u4E0B\u4E0D\u5141\u8BB8\u4E3A\u7A7A strictNullChecks \u53EA\u7528\u6765\u68C0\u67E5\u7C7B\u578B</span>
<span class="token keyword">const</span> <span class="token literal-property property">d</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">&#39;234&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E25\u683C\u6A21\u5F0F\u4E0Bvoid\u53EA\u80FD\u4E3Aundefind, \u975E\u4E25\u683C\u6A21\u5F0F\u53EF\u4EE5\u4E3Anull</span>
<span class="token keyword">const</span> <span class="token literal-property property">e</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">f</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">g</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

<span class="token comment">// \u4EFB\u4F55es6\u65B0\u589E\u5BF9\u8C61\uFF0C\u53EA\u80FD\u5728es2015\u4E2D\u4F7F\u7528\uFF0C\u6240\u4EE5es5\u4E2D\u4E0D\u80FD\u4F7F\u7528</span>
<span class="token comment">// \u5982\u679C\u8BBE\u7F6E\u4E86lib\uFF0C\u9700\u8981\u5F15\u5165DOM\u5E93\uFF0C\u4E0D\u7136console\u7B49\u5185\u7F6E\u5BF9\u8C61\u4F1A\u62A5\u9519</span>
<span class="token keyword">const</span> <span class="token literal-property property">h</span><span class="token operator">:</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// yarn tsc --locale zh-CN  \u4E2D\u6587\u9519\u8BEF\u6D88\u606F\u63D0\u793A</span>
<span class="token comment">// vscode\u81EA\u5DF1\u63D0\u793A\u4F7F\u7528typescript-locale\u8BBE\u7F6Ezh-CN\u5373\u53EF</span>
<span class="token keyword">const</span> <span class="token literal-property property">error</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u6570\u7EC4\u7C7B\u578B</span>
<span class="token keyword">const</span> <span class="token literal-property property">arr1</span><span class="token operator">:</span> Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> = [1,2];

const arr2: string[] = [&#39;a&#39;, &#39;b&#39;]

// \u6570\u7EC4\u7C7B\u578B\u5E94\u7528
function sum(...args: number[]) </span><span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD\u6210\u5458\u662F\u4E0D\u662F\u6570\u5B57</span>
    <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> current</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> prev <span class="token operator">+</span> current<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token plain-text">

sum(1,32);
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> Object</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token function-variable function">object</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// [] {} () =&gt; {} object\u7C7B\u578B</span>

<span class="token keyword">const</span> <span class="token literal-property property">obj</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">foo</span><span class="token operator">:</span> number<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">foo</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u5FC5\u987B\u8DDF\u58F0\u660E\u7684\u4E00\u81F4\uFF0C\u5426\u5219\u4E0D\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5143\u7956\u7C7B\u578B</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// hook\u4E2D\u90FD\u5E94\u7528\u5230</span>
<span class="token keyword">const</span> <span class="token literal-property property">tuple</span><span class="token operator">:</span> <span class="token punctuation">[</span>number<span class="token punctuation">,</span> string<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> age <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> name <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>myAge<span class="token punctuation">,</span> myName<span class="token punctuation">]</span> <span class="token operator">=</span> tuple<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E" aria-hidden="true">#</a> \u679A\u4E3E</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// const postStatus = {</span>
<span class="token comment">//     Draft: 0,</span>
<span class="token comment">//     onPublished: 1,</span>
<span class="token comment">//     published: 2</span>
<span class="token comment">// }</span>

<span class="token comment">// \u679A\u4E3E\u7C7B\u578B</span>
<span class="token comment">// \u5982\u679C\u4E0D\u6307\u5B9A\u503C\uFF0C\u5219\u4ECE0\u5F00\u59CB\u7D2F\u52A0</span>
<span class="token comment">// enum PostStatus {</span>
<span class="token comment">//     Draft = 0,</span>
<span class="token comment">//     onPublished = 1,</span>
<span class="token comment">//     Published = 2,</span>
<span class="token comment">// }</span>

<span class="token comment">// \u5B57\u7B26\u4E32\u679A\u4E3E</span>
<span class="token comment">// \u5982\u679C\u52A0\u4E86const\uFF0C\u5219\u4F1A\u4F7F\u7528\u771F\u5B9E\u503C</span>
<span class="token keyword">const</span> <span class="token keyword">enum</span> PostStatus <span class="token punctuation">{</span>
    Draft <span class="token operator">=</span> <span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span>
    onPublished <span class="token operator">=</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span>
    Published <span class="token operator">=</span> <span class="token string">&#39;ccc&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> post <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;hello ts&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;ts 666&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> PostStatus<span class="token punctuation">.</span>Draft<span class="token punctuation">,</span> <span class="token comment">// 0, 1, 2</span>
<span class="token punctuation">}</span>

<span class="token comment">// console.log(PostStatus[0]);</span>

<span class="token comment">// \u679A\u4E3E\u4F1A\u5F71\u54CD\u7F16\u8BD1\u540E\u7684\u7ED3\u679C</span>
<span class="token keyword">enum</span> Status <span class="token punctuation">{</span>
    Draft <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    onPublished <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
    Published <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> post1  <span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> Status<span class="token punctuation">.</span>onPublished
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>post1<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u51FD\u6570\u7C7B\u578B</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u52A0\u4E86\u95EE\u53F7\u6807\u8BC6\u53EF\u9009\u53C2\u6570\uFF0C\u6216\u8005\u6DFB\u52A0\u9ED8\u8BA4\u503C</span>
<span class="token comment">// \u53EF\u9009\u53C2\u6570\u5FC5\u987B\u51FA\u73B0\u5728\u6700\u540E\u9762</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">...</span>rest<span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53C2\u6570\u4E2A\u6570\u5FC5\u987B\u8981\u76F8\u540C\uFF0C\u5F62\u53C2\u548C\u5B9E\u53C2\u4E2A\u6570\u76F8\u540C</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u51FD\u6570\u7C7B\u578B\u6807\u8BC6</span>
<span class="token keyword">const</span> <span class="token function-variable function">fun2</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">string</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;fn&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a> \u6CDB\u578B</h2><aside> \u{1F4CC} \u53EF\u4EE5\u901A\u8FC7T\u6307\u5B9A\u8C03\u7528\u7684\u65F6\u5019\u518D\u786E\u5B9A\u7C7B\u578B </aside><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> identity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">T</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(arg: T): T </span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token plain-text">

identity</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(true);

window.onmousedown = function(mouseEvent: any) </span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mouseEvent<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token plain-text">
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="any" tabindex="-1"><a class="header-anchor" href="#any" aria-hidden="true">#</a> any</h2><aside> \u{1F4CC} any\u4E0D\u4F1A\u505A\u4EFB\u4F55\u7C7B\u578B\u68C0\u67E5\uFF0C\u8BED\u6CD5\u4E0D\u4F1A\u62A5\u9519 </aside><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code>
<span class="token keyword">function</span> <span class="token function">stringify</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">stringify</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u578B\u65AD\u8A00</p><p>\u81EA\u5DF1\u6307\u5B9A\u6267\u884C\u7684\u7ED3\u679C\u7C7B\u578B</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u7C7B\u578B\u65AD\u8A00</span>
<span class="token comment">// \u81EA\u5DF1\u5236\u5B9A\u7C7B\u578B</span>

<span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> res <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// const square1 = res * res; res\u63A8\u65AD\u4E3Anumber\u6216\u8005undefined</span>

<span class="token keyword">const</span> num1 <span class="token operator">=</span> res <span class="token keyword">as</span> number<span class="token punctuation">;</span>
<span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">res; // jsx\u4F1A\u8DDF&lt;&gt;\u51B2\u7A81 \u63A8\u8350as\u8BED\u6CD5
const square = num1 * num1;
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="interface\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#interface\u63A5\u53E3" aria-hidden="true">#</a> interface\u63A5\u53E3</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u63A5\u53E3\u7EA6\u675F\u5BF9\u8C61\u7684\u7ED3\u6784</span>
<span class="token keyword">interface</span> <span class="token class-name">Post</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> string
    <span class="token literal-property property">content</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">printPost</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">post</span><span class="token operator">:</span> Post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">printPost</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u63A5\u53E3\u53EF\u9009\u6210\u5458-\u53EA\u8BFB\u6210\u5458" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u53EF\u9009\u6210\u5458-\u53EA\u8BFB\u6210\u5458" aria-hidden="true">#</a> \u63A5\u53E3\u53EF\u9009\u6210\u5458&amp;\u53EA\u8BFB\u6210\u5458</h2><aside> \u{1F4CC} \uFF1F\u53EF\u9009\u6210\u5458 </aside><aside> \u{1F4CC} readonly \u53EA\u8BFB\u6210\u5458 </aside><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u63A5\u53E3\u7EA6\u675F\u5BF9\u8C61\u7684\u7ED3\u6784</span>
<span class="token keyword">interface</span> <span class="token class-name">Post</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> string
    <span class="token literal-property property">content</span><span class="token operator">:</span> string
    subTitle<span class="token operator">?</span><span class="token operator">:</span> string <span class="token comment">// \u53EF\u9009\u6210\u5458\uFF0Cundefined\u6216\u8005string</span>
    readonly summary<span class="token operator">:</span> string <span class="token comment">// \u53EA\u8BFB\u6210\u5458</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token literal-property property">hello</span><span class="token operator">:</span> Post <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;hello, ts&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;javascript superset&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">summary</span><span class="token operator">:</span> <span class="token string">&#39;\u7B80\u4ECB&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// hello.summary = &#39;234&#39;;</span>
<span class="token comment">// string\u7C7B\u578B\u7684\u952E\u503C</span>
<span class="token keyword">interface</span> <span class="token class-name">Cache</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>prop<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// prop\u4E3A\u81EA\u5DF1\u5B9A\u4E49\uFF0C\u53EA\u662F\u4E3A\u4E86\u58F0\u660E\u683C\u5F0F</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token literal-property property">cache</span><span class="token operator">:</span> Cache <span class="token operator">=</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

cache<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7C7B" aria-hidden="true">#</a> \u7C7B</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u58F0\u660E\u7C7B\u578B</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span> <span class="token comment">// = &#39;init name&#39;</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// = &#39;init number&#39;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token comment">// this.gender = 0; \u5FC5\u987B\u8981\u58F0\u660E\u518D\u8D4B\u503C</span>
  <span class="token punctuation">}</span>

  <span class="token function">sayHi</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">i am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B-\u8BBF\u95EE\u4FEE\u9970\u7B26</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u58F0\u660E\u7C7B\u578B</span>
  <span class="token keyword">public</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span> <span class="token comment">// \u9ED8\u8BA4\u516C\u6709\u5C5E\u6027 \u5EFA\u8BAE\u6DFB\u52A0</span>
  <span class="token keyword">private</span> <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// \u79C1\u6709\u5C5E\u6027\uFF0C\u53EA\u80FD\u5728\u5F53\u524D\u7C7B\u8FDB\u884C\u8BBF\u95EE</span>
  <span class="token keyword">protected</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span> <span class="token comment">// \u53D7\u4FDD\u62A4\u7684\u7C7B\u578B,\u53EF\u4EE5\u5728\u7EE7\u627F\u7684\u5B50\u7C7B\u4E2D\u8FDB\u884C\u8BBF\u95EE</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">// this.gender = 0; \u5FC5\u987B\u8981\u58F0\u660E\u518D\u8D4B\u503C</span>
  <span class="token punctuation">}</span>

  <span class="token function">sayHi</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">i am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> tom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u6784\u9020\u51FD\u6570\u662F\u79C1\u6709\u7684\uFF0C\u5219\u53EA\u80FD\u5185\u90E8\u8FDB\u884Cnew\uFF0C\u7136\u540E\u901A\u8FC7\u9759\u6001\u65B9\u6CD5\u8FD4\u56DE\u56DE\u53BB</span>
  <span class="token keyword">private</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>gender<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// console.log(this.age);</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token keyword">of</span><span class="token punctuation">(</span>name<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// console.log(tom.gender);</span>

<span class="token keyword">const</span> student <span class="token operator">=</span> Student<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7C7B-\u53EA\u8BFB\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u7C7B-\u53EA\u8BFB\u5C5E\u6027" aria-hidden="true">#</a> \u7C7B-\u53EA\u8BFB\u5C5E\u6027</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u58F0\u660E\u7C7B\u578B</span>
  <span class="token keyword">public</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span> <span class="token comment">// \u9ED8\u8BA4\u516C\u6709\u5C5E\u6027 \u5EFA\u8BAE\u6DFB\u52A0</span>
  <span class="token keyword">private</span> <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// \u79C1\u6709\u5C5E\u6027\uFF0C\u53EA\u80FD\u5728\u5F53\u524D\u7C7B\u8FDB\u884C\u8BBF\u95EE</span>
  readonly gender<span class="token operator">:</span> boolean<span class="token punctuation">;</span> <span class="token comment">// \u53EA\u8BFB\u5C5E\u6027</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">// this.gender = 0; \u5FC5\u987B\u8981\u58F0\u660E\u518D\u8D4B\u503C</span>
  <span class="token punctuation">}</span>

  <span class="token function">sayHi</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">i am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> tom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7C7B\u4E0E\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u4E0E\u63A5\u53E3" aria-hidden="true">#</a> \u7C7B\u4E0E\u63A5\u53E3</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// interface EatAndRun {</span>
<span class="token comment">//   eat(food: string): void;</span>
<span class="token comment">//   run(distance: number): void;</span>
<span class="token comment">// }</span>
<span class="token keyword">interface</span> <span class="token class-name">Eat</span> <span class="token punctuation">{</span>
  <span class="token function">eat</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Run</span> <span class="token punctuation">{</span>
  <span class="token function">run</span><span class="token punctuation">(</span>distance<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u901A\u8FC7\u63A5\u53E3\u5BF9\u7C7B\u8FDB\u884C\u9650\u5236</span>

<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Eat</span><span class="token punctuation">,</span> Run <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">eat</span><span class="token punctuation">(</span>food<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u4F18\u96C5\u7684\u8FDB\u9910</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">distance</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u76F4\u7ACB\u884C\u8D70</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>distance<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token keyword">implements</span> <span class="token class-name">Eat</span><span class="token punctuation">,</span> Run <span class="token punctuation">{</span>
  <span class="token function">eat</span><span class="token punctuation">(</span>food<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u547C\u565C\u547C\u565C\u7684\u5403</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">distance</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u722C\u884C\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>distance<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u62BD\u8C61\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u62BD\u8C61\u7C7B" aria-hidden="true">#</a> \u62BD\u8C61\u7C7B</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// abstract\u5B9A\u4E49\u62BD\u8C61\u7C7B</span>
abstract <span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">eat</span><span class="token punctuation">(</span>food<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5403</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//   \u7236\u7C7B\u5B9A\u4E49\u4E86\uFF0C\u5B50\u7C7B\u5FC5\u987B\u53BB\u5B9E\u73B0</span>
  abstract <span class="token function">run</span><span class="token punctuation">(</span>distance<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">run</span><span class="token punctuation">(</span>distance<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u56DB\u6761\u817F\u884C\u8D70</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>distance<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
d<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string">&quot;\u597D\u5403\u7684&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

d<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6CDB\u578B-1" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B-1" aria-hidden="true">#</a> \u6CDB\u578B</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u58F0\u660E\u65F6\u5019\u4E0D\u58F0\u660E\uFF0C\u8C03\u7528\u65F6\u5019\u4F20\u9012\u4E00\u4E2A\u7C7B\u578B\uFF0C\u4E3A\u4E86\u590D\u7528\u4EE3\u7801</span>

<span class="token keyword">function</span> <span class="token function">createNumberArray</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">length</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(length).fill(value);
  return arr;
}

function createStringArray(length: number, value: string): string[] </span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(length).fill(value);
  return arr;
}

const res = createNumberArray(4, 100);
console.log(res);

// \u6CDB\u578B
// \u8C03\u7528\u51FD\u6570\u7684\u65F6\u5019\u518D\u6307\u5B9A\u7C7B\u578B
function createArray</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">T</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(length: number, value: T) </span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">T</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(length).fill(value);
  return arr;
}

const res1 = createArray</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(3, &quot;name&quot;);
const res4 = createArray</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(3, 4);
console.log(res1);
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7C7B\u578B\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u58F0\u660E" aria-hidden="true">#</a> \u7C7B\u578B\u58F0\u660E</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> camelCase <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;lodash&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> parse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;query-string&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// query-string\u5185\u7F6E\u4E86\u58F0\u660E\u6587\u4EF6</span>

<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;324&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6210\u5458\u5B9A\u4E49\u7684\u65F6\u5019\u6CA1\u6709\u786E\u5B9A\u7C7B\u578B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u4F7F\u7528\u7684\u65F6\u5019\u518D\u7ED9\u4ED6\u58F0\u660E\u7C7B\u578B</span>
<span class="token comment">// \u517C\u5BB9js\u6A21\u5757\u6765\u8BBE\u8BA1\u7684</span>

<span class="token comment">// declare function camelCase(input: string): string;</span>

<span class="token comment">// \u53EF\u4EE5\u5B89\u88C5@types/lodash\u7C7B\u578B\u8BF4\u660E\u6587\u4EF6\uFF0C\u5C31\u53EF\u4EE5\u4E0D\u7528\u81EA\u5DF1\u58F0\u660E\u4E86</span>

<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">camelCase</span><span class="token punctuation">(</span><span class="token string">&quot;hello typed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7\u9690\u5F0F\u7C7B\u578B\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#_7\u9690\u5F0F\u7C7B\u578B\u63A8\u65AD" aria-hidden="true">#</a> 7\u9690\u5F0F\u7C7B\u578B\u63A8\u65AD</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>

<span class="token comment">// age = &#39;string&#39; // \u4E0D\u80FD\u8D4B\u503C\uFF0C\u56E0\u4E3A\u63A8\u65AD\u4F60\u7684\u7C7B\u578B\u4E3Anumber</span>

<span class="token keyword">let</span> foo<span class="token punctuation">;</span>

foo <span class="token operator">=</span> <span class="token string">&#39;string&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tsconfig-json\u6587\u4EF6\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#tsconfig-json\u6587\u4EF6\u8BF4\u660E" aria-hidden="true">#</a> tsconfig.json\u6587\u4EF6\u8BF4\u660E</h2><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token string-property property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es2015&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u8F6C\u5316js\u7248\u672C</span>
<span class="token string-property property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ES2015&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DOM&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A\u7C7B\u578B\u5E93</span>
<span class="token string-property property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u8F93\u51FA\u7ED3\u679C\u7684\u76EE\u5F55</span>
<span class="token string-property property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u9700\u8981\u7F16\u8BD1\u76EE\u5F55</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","TypeScript.html.vue"]]);export{k as default};
