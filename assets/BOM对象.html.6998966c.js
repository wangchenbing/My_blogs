import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.8225ebca.js";const t={},e=p(`<h1 id="\u6D4F\u89C8\u5668\u5BF9\u8C61-bom" tabindex="-1"><a class="header-anchor" href="#\u6D4F\u89C8\u5668\u5BF9\u8C61-bom" aria-hidden="true">#</a> \u6D4F\u89C8\u5668\u5BF9\u8C61 BOM</h1><h2 id="\u5224\u8BFB\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301-css-\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5224\u8BFB\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301-css-\u5C5E\u6027" aria-hidden="true">#</a> \u5224\u8BFB\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301 CSS \u5C5E\u6027</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u544A\u77E5\u6D4F\u89C8\u5668\u652F\u6301\u7684\u6307\u5B9Acss\u5C5E\u6027\u60C5\u51B5
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span> - css\u5C5E\u6027\uFF0C\u662F\u5C5E\u6027\u7684\u540D\u5B57\uFF0C\u4E0D\u9700\u8981\u52A0\u524D\u7F00
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> - \u652F\u6301\u7684\u5C5E\u6027\u60C5\u51B5
 */</span>
<span class="token keyword">function</span> <span class="token function">validateCssKey</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> jsKey <span class="token operator">=</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6709\u4E9Bcss\u5C5E\u6027\u662F\u8FDE\u5B57\u7B26\u53F7\u5F62\u6210</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>jsKey <span class="token keyword">in</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> key<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> validKey <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5C5E\u6027\u540D\u4E3A\u524D\u7F00\u5728js\u4E2D\u7684\u5F62\u5F0F\uFF0C\u5C5E\u6027\u503C\u662F\u524D\u7F00\u5728css\u4E2D\u7684\u5F62\u5F0F</span>
  <span class="token comment">// \u7ECF\u5C1D\u8BD5\uFF0CWebkit \u4E5F\u53EF\u662F\u9996\u5B57\u6BCD\u5C0F\u5199 webkit</span>
  <span class="token keyword">const</span> prefixMap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">Webkit</span><span class="token operator">:</span> <span class="token string">&#39;-webkit-&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">Moz</span><span class="token operator">:</span> <span class="token string">&#39;-moz-&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ms</span><span class="token operator">:</span> <span class="token string">&#39;-ms-&#39;</span><span class="token punctuation">,</span>
    <span class="token constant">O</span><span class="token operator">:</span> <span class="token string">&#39;-o-&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> jsPrefix <span class="token keyword">in</span> prefixMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> styleKey <span class="token operator">=</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>jsPrefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>jsKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>styleKey <span class="token keyword">in</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      validKey <span class="token operator">=</span> prefixMap<span class="token punctuation">[</span>jsPrefix<span class="token punctuation">]</span> <span class="token operator">+</span> key<span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> validKey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u628A\u6709\u8FDE\u5B57\u7B26\u53F7\u7684\u5B57\u7B26\u4E32\u8F6C\u5316\u4E3A\u9A7C\u5CF0\u547D\u540D\u6CD5\u7684\u5B57\u7B26\u4E32
 */</span>
<span class="token keyword">function</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-(\\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">matched<span class="token punctuation">,</span> letter</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> letter<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
 * \u68C0\u67E5\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301\u67D0\u4E2Acss\u5C5E\u6027\u503C\uFF08es6\u7248\uFF09
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span> - \u68C0\u67E5\u7684\u5C5E\u6027\u503C\u6240\u5C5E\u7684css\u5C5E\u6027\u540D
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">value</span> - \u8981\u68C0\u67E5\u7684css\u5C5E\u6027\u503C\uFF08\u4E0D\u8981\u5E26\u524D\u7F00\uFF09
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> - \u8FD4\u56DE\u6D4F\u89C8\u5668\u652F\u6301\u7684\u5C5E\u6027\u503C
 */</span>
<span class="token keyword">function</span> <span class="token function">valiateCssValue</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;-o-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-ms-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-moz-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-webkit-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> prefixValue <span class="token operator">=</span> prefix<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> item <span class="token operator">+</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> eleStyle <span class="token operator">=</span> element<span class="token punctuation">.</span>style<span class="token punctuation">;</span>
  <span class="token comment">// \u5E94\u7528\u6BCF\u4E2A\u524D\u7F00\u7684\u60C5\u51B5\uFF0C\u4E14\u6700\u540E\u4E5F\u8981\u5E94\u7528\u4E0A\u6CA1\u6709\u524D\u7F00\u7684\u60C5\u51B5\uFF0C\u770B\u6700\u540E\u6D4F\u89C8\u5668\u8D77\u6548\u7684\u4F55\u79CD\u60C5\u51B5</span>
  <span class="token comment">// \u8FD9\u5C31\u662F\u6700\u597D\u5728prefix\u91CC\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u662F&#39;&#39;</span>
  prefixValue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    eleStyle<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> eleStyle<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u68C0\u67E5\u6D4F\u89C8\u5668\u662F\u5426\u652F\u6301\u67D0\u4E2Acss\u5C5E\u6027\u503C
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">key</span> - \u68C0\u67E5\u7684\u5C5E\u6027\u503C\u6240\u5C5E\u7684css\u5C5E\u6027\u540D
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">value</span> - \u8981\u68C0\u67E5\u7684css\u5C5E\u6027\u503C\uFF08\u4E0D\u8981\u5E26\u524D\u7F00\uFF09
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> - \u8FD4\u56DE\u6D4F\u89C8\u5668\u652F\u6301\u7684\u5C5E\u6027\u503C
 */</span>
<span class="token keyword">function</span> <span class="token function">valiateCssValue</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> prefix <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;-o-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-ms-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-moz-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-webkit-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> prefixValue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prefix<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    prefixValue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>prefix<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> eleStyle <span class="token operator">=</span> element<span class="token punctuation">.</span>style<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> prefixValue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    eleStyle<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> prefixValue<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> eleStyle<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">function</span> <span class="token function">validCss</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> validCss <span class="token operator">=</span> <span class="token function">validateCssKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>validCss<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> validCss<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">valiateCssValue</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FD4\u56DE\u5F53\u524D\u7F51\u9875\u5730\u5740" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u5F53\u524D\u7F51\u9875\u5730\u5740" aria-hidden="true">#</a> \u8FD4\u56DE\u5F53\u524D\u7F51\u9875\u5730\u5740</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">currentURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u83B7\u53D6\u6EDA\u52A8\u6761\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6EDA\u52A8\u6761\u4F4D\u7F6E" aria-hidden="true">#</a> \u83B7\u53D6\u6EDA\u52A8\u6761\u4F4D\u7F6E</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getScrollPosition</span><span class="token punctuation">(</span><span class="token parameter">el <span class="token operator">=</span> window</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>pageXOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>pageYOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollTop
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u83B7\u53D6url\u4E2D\u7684\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6url\u4E2D\u7684\u53C2\u6570" aria-hidden="true">#</a> \u83B7\u53D6url\u4E2D\u7684\u53C2\u6570</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getURLParameters</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([^?=&amp;]+)(=([^&amp;]*))</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>v<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9875\u9762\u8DF3\u8F6C-\u662F\u5426\u8BB0\u5F55\u5728history\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u9875\u9762\u8DF3\u8F6C-\u662F\u5426\u8BB0\u5F55\u5728history\u4E2D" aria-hidden="true">#</a> \u9875\u9762\u8DF3\u8F6C\uFF0C\u662F\u5426\u8BB0\u5F55\u5728history\u4E2D</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> asLink <span class="token operator">=</span> <span class="token boolean">true</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  asLink <span class="token operator">?</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> url <span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6EDA\u52A8\u6761\u6EDA\u52A8\u5230\u6307\u5B9A\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u6EDA\u52A8\u6761\u6EDA\u52A8\u5230\u6307\u5B9A\u4F4D\u7F6E" aria-hidden="true">#</a> \u6EDA\u52A8\u6761\u6EDA\u52A8\u5230\u6307\u5B9A\u4F4D\u7F6E</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89E3\u51B3\u5E73\u6ED1\u6EDA\u52A8\u5B58\u5728\u517C\u5BB9\u6027\u95EE\u9898</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">yORxy</span><span class="token operator">:</span> number <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">;</span> y<span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">,</span>
  params<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">smooth</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
    <span class="token literal-property property">callBack</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> Function<span class="token punctuation">;</span>
    <span class="token literal-property property">averageStep</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token punctuation">}</span></span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> xy <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> smooth<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> averageStep <span class="token punctuation">}</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">smooth</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">callback</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">averageStep</span><span class="token operator">:</span> <span class="token number">50</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    params
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isSmooth <span class="token operator">=</span> smooth <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> smooth<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> yORxy <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xy<span class="token punctuation">.</span>y <span class="token operator">=</span> yORxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    xy <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>xy<span class="token punctuation">,</span> yORxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSmooth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>xy<span class="token punctuation">.</span>x<span class="token punctuation">,</span> xy<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> scrollTop <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
  <span class="token keyword">let</span> scrollLeft <span class="token operator">=</span>
    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">scrollFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scrollLeft <span class="token operator">===</span> xy<span class="token punctuation">.</span>x <span class="token operator">&amp;&amp;</span> scrollTop <span class="token operator">===</span> xy<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    scrollTop <span class="token operator">=</span>
      scrollTop <span class="token operator">-</span> averageStep <span class="token operator">&lt;=</span> xy<span class="token punctuation">.</span>y <span class="token operator">?</span> xy<span class="token punctuation">.</span>y <span class="token operator">:</span> scrollTop <span class="token operator">-</span> averageStep<span class="token punctuation">;</span>
    scrollLeft <span class="token operator">=</span>
      scrollLeft <span class="token operator">-</span> averageStep <span class="token operator">&lt;=</span> xy<span class="token punctuation">.</span>x <span class="token operator">?</span> xy<span class="token punctuation">.</span>x <span class="token operator">:</span> scrollLeft <span class="token operator">-</span> averageStep<span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>scrollLeft<span class="token punctuation">,</span> scrollTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>scrollFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">scrollFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u590D\u5236\u6587\u672C" tabindex="-1"><a class="header-anchor" href="#\u590D\u5236\u6587\u672C" aria-hidden="true">#</a> \u590D\u5236\u6587\u672C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;textarea&#39;</span><span class="token punctuation">)</span>
  el<span class="token punctuation">.</span>value <span class="token operator">=</span> str
  el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;readonly&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&#39;absolute&#39;</span>
  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">&#39;-9999px&#39;</span>
  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">&#39;-9999px&#39;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
  <span class="token keyword">const</span> selected <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rangeCount <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRangeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token boolean">false</span>
  el<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&#39;copy&#39;</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAllRanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addRange</span><span class="token punctuation">(</span>selected<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u68C0\u6D4B\u8BBE\u5907\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u68C0\u6D4B\u8BBE\u5907\u7C7B\u578B" aria-hidden="true">#</a> \u68C0\u6D4B\u8BBE\u5907\u7C7B\u578B</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">detectDeviceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;Mobile&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;Desktop&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dom\u76F8\u5173\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#dom\u76F8\u5173\u5C5E\u6027" aria-hidden="true">#</a> dom\u76F8\u5173\u5C5E\u6027</h2><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u914D\u7F6E</summary><p>\u7F51\u9875\u53EF\u89C1\u533A\u57DF\u5BBD\uFF1A document.body.clientWidth;</p><p>\u7F51\u9875\u53EF\u89C1\u533A\u57DF\u9AD8\uFF1A document.body.clientHeight;</p><p>\u7F51\u9875\u53EF\u89C1\u533A\u57DF\u5BBD\uFF1A document.body.offsetWidth (\u5305\u62EC\u8FB9\u7EBF\u7684\u5BBD);</p><p>\u7F51\u9875\u53EF\u89C1\u533A\u57DF\u9AD8\uFF1A document.body.offsetHeight (\u5305\u62EC\u8FB9\u7EBF\u7684\u5BBD);</p><p>\u7F51\u9875\u6B63\u6587\u5168\u6587\u5BBD\uFF1A document.body.scrollWidth;</p><p>\u9875\u6B63\u6587\u5168\u6587\u9AD8\uFF1A document.body.scrollHeight;</p><p>\u7F51\u9875\u88AB\u5377\u53BB\u7684\u9AD8\uFF1A\xA0document.body.scrollTop;</p><p>\u7F51\u9875\u88AB\u5377\u53BB\u7684\u5DE6\uFF1A document.body.scrollLeft;</p><p>\u7F51\u9875\u6B63\u6587\u90E8\u5206\u4E0A\uFF1A window.screenTop;</p><p>\u7F51\u9875\u6B63\u6587\u90E8\u5206\u5DE6\uFF1A window.screenLeft;</p><p>\u5C4F\u5E55\u5206\u8FA8\u7387\u7684\u9AD8\uFF1A window.screen.height;</p><p>\u5C4F\u5E55\u5206\u8FA8\u7387\u7684\u5BBD\uFF1A window.screen.width;</p><p>\u5C4F\u5E55\u53EF\u7528\u5DE5\u4F5C\u533A\u9AD8\u5EA6\uFF1A window.screen.availHeight;</p><p>\u5C4F\u5E55\u53EF\u7528\u5DE5\u4F5C\u533A\u5BBD\u5EA6\uFF1Awindow.screen.availWidth;</p><p>scrollHeight \u83B7\u53D6\u5BF9\u8C61\u7684\u6EDA\u52A8\u9AD8\u5EA6\u3002</p><p>scrollLeft \u8BBE\u7F6E\u6216\u83B7\u53D6\u4F4D\u4E8E\u5BF9\u8C61\u5DE6\u8FB9\u754C\u548C\u7A97\u53E3\u4E2D\u76EE\u524D\u53EF\u89C1\u5185\u5BB9\u7684\u6700\u5DE6\u7AEF\u4E4B\u95F4\u7684\u8DDD\u79BB</p><p>scrollTop \u8BBE\u7F6E\u6216\u83B7\u53D6\u4F4D\u4E8E\u5BF9\u8C61\u6700\u9876\u7AEF\u548C\u7A97\u53E3\u4E2D\u53EF\u89C1\u5185\u5BB9\u7684\u6700\u9876\u7AEF\u4E4B\u95F4\u7684\u8DDD\u79BB</p><p>scrollWidth \u83B7\u53D6\u5BF9\u8C61\u7684\u6EDA\u52A8\u5BBD\u5EA6</p><p>offsetHeight \u83B7\u53D6\u5BF9\u8C61\u76F8\u5BF9\u4E8E\u7248\u9762\u6216\u7531\u7236\u5750\u6807</p><p>offsetParent \u5C5E\u6027\u6307\u5B9A\u7684\u7236\u5750\u6807\u7684\u9AD8\u5EA6</p><p>offsetLeft \u83B7\u53D6\u5BF9\u8C61\u76F8\u5BF9\u4E8E\u7248\u9762\u6216\u7531</p><p>offsetParent \u5C5E\u6027\u6307\u5B9A\u7684\u7236\u5750\u6807\u7684\u8BA1\u7B97\u5DE6\u4FA7\u4F4D\u7F6E</p><p>offsetTop \u83B7\u53D6\u5BF9\u8C61\u76F8\u5BF9\u4E8E\u7248\u9762\u6216\u7531</p><p>offsetTop \u5C5E\u6027\u6307\u5B9A\u7684\u7236\u5750\u6807\u7684\u8BA1\u7B97\u9876\u7AEF\u4F4D\u7F6E</p><p>event.clientX \u76F8\u5BF9\u6587\u6863\u7684\u6C34\u5E73\u5EA7\u6807</p><p>event.clientY \u76F8\u5BF9\u6587\u6863\u7684\u5782\u76F4\u5EA7\u6807</p><p>event.offsetX \u76F8\u5BF9\u5BB9\u5668\u7684\u6C34\u5E73\u5750\u6807</p><p>event.offsetY \u76F8\u5BF9\u5BB9\u5668\u7684\u5782\u76F4\u5750\u6807</p><p>document.documentElement.scrollTop \u5782\u76F4\u65B9\u5411\u6EDA\u52A8\u7684\u503Cevent.clientX+document.documentElement.scrollTop \u76F8\u5BF9\u6587\u6863\u7684\u6C34\u5E73\u5EA7\u6807+\u5782\u76F4\u65B9\u5411\u6EDA\u52A8\u7684\u91CF</p></details>`,19),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","BOM\u5BF9\u8C61.html.vue"]]);export{k as default};
